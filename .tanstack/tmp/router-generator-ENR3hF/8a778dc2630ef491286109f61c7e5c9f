/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as BlogRouteImport } from './routes/blog'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogBlogRouteImport } from './routes/blog.$blog'

const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogRoute = BlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogBlogRoute = BlogBlogRouteImport.update({
  id: '/$blog',
  path: '/$blog',
  getParentRoute: () => BlogRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRouteWithChildren
  '/projects': typeof ProjectsRoute
  '/blog/$blog': typeof BlogBlogRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRouteWithChildren
  '/projects': typeof ProjectsRoute
  '/blog/$blog': typeof BlogBlogRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blog': typeof BlogRouteWithChildren
  '/projects': typeof ProjectsRoute
  '/blog/$blog': typeof BlogBlogRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/blog' | '/projects' | '/blog/$blog'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/blog' | '/projects' | '/blog/$blog'
  id: '__root__' | '/' | '/about' | '/blog' | '/projects' | '/blog/$blog'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  BlogRoute: typeof BlogRouteWithChildren
  ProjectsRoute: typeof ProjectsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/$blog': {
      id: '/blog/$blog'
      path: '/$blog'
      fullPath: '/blog/$blog'
      preLoaderRoute: typeof BlogBlogRouteImport
      parentRoute: typeof BlogRoute
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/about' {
  const createFileRoute: CreateFileRoute<
    '/about',
    FileRoutesByPath['/about']['parentRoute'],
    FileRoutesByPath['/about']['id'],
    FileRoutesByPath['/about']['path'],
    FileRoutesByPath['/about']['fullPath']
  >
}
declare module './routes/blog' {
  const createFileRoute: CreateFileRoute<
    '/blog',
    FileRoutesByPath['/blog']['parentRoute'],
    FileRoutesByPath['/blog']['id'],
    FileRoutesByPath['/blog']['path'],
    FileRoutesByPath['/blog']['fullPath']
  >
}
declare module './routes/projects' {
  const createFileRoute: CreateFileRoute<
    '/projects',
    FileRoutesByPath['/projects']['parentRoute'],
    FileRoutesByPath['/projects']['id'],
    FileRoutesByPath['/projects']['path'],
    FileRoutesByPath['/projects']['fullPath']
  >
}
declare module './routes/blog.$blog' {
  const createFileRoute: CreateFileRoute<
    '/blog/$blog',
    FileRoutesByPath['/blog/$blog']['parentRoute'],
    FileRoutesByPath['/blog/$blog']['id'],
    FileRoutesByPath['/blog/$blog']['path'],
    FileRoutesByPath['/blog/$blog']['fullPath']
  >
}

interface BlogRouteChildren {
  BlogBlogRoute: typeof BlogBlogRoute
}

const BlogRouteChildren: BlogRouteChildren = {
  BlogBlogRoute: BlogBlogRoute,
}

const BlogRouteWithChildren = BlogRoute._addFileChildren(BlogRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  BlogRoute: BlogRouteWithChildren,
  ProjectsRoute: ProjectsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
